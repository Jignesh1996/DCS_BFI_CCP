clear all;
close all
%--------------------------------------------------------------------------

% Folder name  - provide folder name for which you want to convert the data
% Folder='21.4.27-apnea without cuff';
file_no = 4;
%--------------------------------------------------------------------------
% 
filename_d=strcat('C:\Users\Jignesh\OneDrive - The University of Western Ontario\Research\Data\TNQT Pulsatility study\TP_Study\DCS\20220608 - '+string(file_no),'\Data.mat');

load(filename_d)
% load("D:\Jignesh\MSc Western Uni\Research\Data\20220706\20220706\Data.mat")
dcs = Data;



filename_nd=strcat('C:\Users\Jignesh\OneDrive - The University of Western Ontario\Research\Data\TNQT Pulsatility study\TP_Study\DCS_T\20220608 - '+string(file_no)+'TR','\Data.mat');
load(filename_nd)
% load("D:\Jignesh\MSc Western Uni\Research\Data\20220706\20220706 - TRTP\Data.mat")
dcs_t = Data;

% dcs_nt = dcs_n(128:end,:,:);
% dcs_t = dcs(121:121+size(dcs_nt,1)-1,:,:);
Data_all = [dcs  dcs_t];

%Loading the ECG file
filename_nd=strcat('C:\Users\Jignesh\OneDrive - The University of Western Ontario\Research\Data\TNQT Pulsatility study\TP_Study\ECG\20220608_'+string(file_no)+'.mat');
load(filename_nd)

%%
l = 60; % length of signal as ROI in seconds
s = 1; % Signal ROI starting point in seconds;

ecg_a = data(datastart(1):dataend(1));
bp_a = data(datastart(2):dataend(2));
% tcd_a = data(datastart(3):dataend(3));

ecg1 = ecg_a(1:660000);
ecg1 = normalize(ecg1);
% ecg1 = lpf(ecg1,5,1000);
    
% tcd = tcd_a(1:length(ecg1));
% % tcd = normalize(tcd);
% tcd = lpf_ffilts(tcd,30,1000);

bp_a = bp_a(1:length(ecg1));
bp_a = lpf(bp_a,3,1000);

%%

g2(1,:,:)=squeeze(dcs(:,1,:)-1); %g2-1 curve generation
g2_1_temp=squeeze(dcs(:,1,:)-1); %g2-1 curve generation
g2_2_temp=squeeze(dcs(:,2,:)-1); %g2-1 curve generation
g2_3_temp=squeeze(dcs(:,3,:)-1); %g2-1 curve generation
g2_4_temp=squeeze(dcs(:,4,:)-1); %g2-1 curve generation
g2_5_temp=squeeze(dcs_t(:,1,:)-1);
g2_6_temp=squeeze(dcs_t(:,2,:)-1);
g2_7_temp=squeeze(dcs_t(:,3,:)-1);
g2_8_temp=squeeze(dcs_t(:,4,:)-1);
% average g2 curve for large source detector separation
% for i=1:size(g2,2)
%     g2(2,i,:)=(g2_2_temp(i,:)+g2_3_temp(i,:)+g2_4_temp(i,:)+g2_5_temp(i,:)+g2_6_temp(i,:)+g2_7_temp(i,:)+g2_8_temp(i,:))/8;
% end
for i=1:size(g2,2)
    g2(2,i,:)=( g2_2_temp(i,:)+g2_3_temp(i,:)+g2_4_temp(i,:))/3;
end

for i=1:size(g2,2)
    g2(3,i,:)=( g2_5_temp(i,:)+g2_6_temp(i,:)+g2_7_temp(i,:) + g2_8_temp(i,:))/4;
end

% for i=1:size(g2,2)
%     g2a(1,i,:)=( normalize(g2_2_temp(i,:))+normalize(g2_3_temp(i,:))+normalize(g2_4_temp(i,:))+ normalize(0.25*g2_5_temp(i,:))+ 0.25*normalize(g2_6_temp(i,:)) ...
%         + 0.25*normalize(g2_7_temp(i,:)) + 0.25*normalize(g2_8_temp(i,:)))/4;
% end
for i=1:size(g2,2)
    g2a(1,i,:)=( (g2_2_temp(i,:)./g2_2_temp(1,1))+(g2_3_temp(i,:)./g2_3_temp(1,1))+(g2_4_temp(i,:)./g2_4_temp(1,1))+ (g2_5_temp(i,:)./g2_5_temp(1,1))+ (g2_6_temp(i,:)./g2_6_temp(1,1)) ...
        + (g2_7_temp(i,:)./g2_7_temp(1,1)) + (g2_8_temp(i,:)./g2_8_temp(1,1)))/7;
end



%% Crating the average g2 curves for the tourniquet pulsatility experiment to check if both the systems are working correctly
hfig = figure()
avg_g2 = mean(g2(:,1:30,:),2);
fname = "avg_g2_figure"
% a_g2 = mean(Data_all(1:120*20,[1 2 5],:)-1,1);
% avg_g2(:,1,:) = a_g2(1,:,:);
% semilogx(Data_tau,squeeze(avg_g2(1,1,:))/max(squeeze(avg_g2(1,1,:))));
% hold on
% semilogx(Data_tau,squeeze(avg_g2(2,1,:))/max(squeeze(avg_g2(2,1,:))));
% semilogx(Data_tau,squeeze(avg_g2(3,1,:))/max(squeeze(avg_g2(3,1,:))));

% semilogx(Data_tau,squeeze(avg_g2(1,1,:)));
% hold on
semilogx(Data_tau,squeeze(avg_g2(2,1,:)+1));
% semilogx(Data_tau,squeeze(avg_g2(3,1,:)));

% legend("Normalized 1cm","Norm 2.5cm","Norm 2.5cm TR","DCS 1cm","DCS 2.5cm","TR sys DCS 2.5cm ")
title("Avg. Autocorrelatio Curve")
xlabel("Data tau")
picturewidth = 20; % set this parameter and keep it forever
hw_ratio = 0.65; % feel free to play with this ratio
set(findall(hfig,'-property','FontSize'),'FontSize',17) % adjust fontsize to your document

set(findall(hfig,'-property','Box'),'Box','off') % optional
set(findall(hfig,'-property','Interpreter'),'Interpreter','latex') 
set(findall(hfig,'-property','TickLabelInterpreter'),'TickLabelInterpreter','latex')
set(hfig,'Units','centimeters','Position',[3 3 picturewidth hw_ratio*picturewidth])
pos = get(hfig,'Position');
set(hfig,'PaperPositionMode','Auto','PaperUnits','centimeters','PaperSize',[pos(3), pos(4)])
%print(hfig,fname,'-dpdf','-painters','-fillpage')
print(hfig,fname,'-dpng','-painters')



%% aDb calculations

rho = [1 2.5 2.5]; %source detector separations in cm 
mua = 0.17; %cm^-1 baseline absorption coefficient
mus = 10; %cm^-1 baseline reduced scattering coefficient

tau_values=Data_tau;

for chan=1:size(g2,1)
     for i=1:size(g2,2) 
        rsd=rho(chan);
        g2_temp(i,:)=squeeze(g2(chan,i,:));
        LB = [0];
        UB = [inf];
        Starting = [1e-9]; %[aDb, Beta; cm^2/s, a.u.]
        beta= squeeze(g2(chan,i,1)); %0.1568;
        options = optimset('Display','final','TolX',1e-30,'MaxIter',2000000, 'MaxFunEvals', 200000);
        [FittedParams] = fminsearchbnd(@Brownian_fitting,Starting,LB,UB,options,tau_values,g2_temp(i,:),mua,mus,rsd,beta);
        aDb1(chan,i) = FittedParams(1);
    end
end

%% Trial code
% rho = [1 1.5 2 2.5]; %source detector separations in cm 
% mua = 0.17; %cm^-1 baseline absorption coefficient
% mus = 10; %cm^-1 baseline reduced scattering coefficient
% 
% tau_values=Data_tau;
% 
% for chan=1:size(g2a,1)
%      for i=1:size(g2a,2) 
%         rsd=rho(chan);
%         g2_temp(i,:)=squeeze(g2a(chan,i,:));
%         LB = [0];
%         UB = [inf];
%         Starting = [1e-9]; %[aDb, Beta; cm^2/s, a.u.]
%         beta= squeeze(g2a(chan,i,1)); %0.1568;
%         options = optimset('Display','final','TolX',1e-30,'MaxIter',2000000, 'MaxFunEvals', 200000);
%         [FittedParams] = fminsearchbnd(@Brownian_fitting,Starting,LB,UB,options,tau_values,g2_temp(i,:),mua,mus,rsd,beta);
%         aDb1a(chan,i) = FittedParams(1);
%     end
% end

%%
Channel=1;
Curve_no=1;
rho = [1 2.5 2.5];

beta=g2(Channel, Curve_no,1);
aDb_fit=aDb1(Channel,Curve_no);

g2_fit=gen_DCS_fit(Data_tau,mua,mus,rho(Channel),beta,aDb_fit);

semilogx(Data_tau,squeeze(g2(1,1,:)),'k')
hold on
semilogx(Data_tau,g2_fit,'r')
%% Data plotting

% time resultion - aqusition time used to aquire data

t_res=0.05; % seconds
time=t_res*(1:1:size(aDb1,2));

subplot(3,1,1)

plot(time,aDb1(1,:))
title('{\itr}_{SD}=1 cm')
% set(gca,'xticklabel',{})

subplot(3,1,2)

plot(time,aDb1(2,:))
title('{\itr}_{SD}=2.5 cm')
xlabel('Time (s)')

subplot(3,1,3)

plot(time,aDb1(2,:))
title('{\itr}_{SD}=2.5 cm TR system')
xlabel('Time (s)')

%% 
plot(normalize(aDb1'));
mean_adb = zeros(5,3,660);

%% Fiding the shift by checking for the SNR
corr = zeros([1,2*size(aDb1a,2)-1]);
for i=1:100
    adb_25 = aDb1(2,:)+circshift(aDb1(3,:),i-50);
    s(i) = snr(adb_25,20);
    corr(i,:) = xcorr(aDb1(2,:),circshift(aDb1(3,:),i-50));
end
%% Plotting the normalize signals for comparision
close all;
t_res=0.05; % seconds
t_avg=1; % window used for averaging in seconds

t_avg_pt=t_avg/t_res; % window used for averaging in points
time=t_res*(1:1:size(aDb1,2));
Data_time(1,i)=i*t_res;
j=1;
for i=2:t_avg_pt:size(aDb1,2)
    aDb1_avg(1,j)=mean(aDb1(1,i-1:i+t_avg_pt-2));
    aDb1_avg(2,j)=mean(aDb1(2,i-1:i+t_avg_pt-2));
    aDb1_avg(3,j)=mean(aDb1(3,i-1:i+t_avg_pt-2));
%     time_avg(1,j)=(Data_time(1,i+t_avg_pt-1));
    j=j+1;
end

mean_adb(file_no/2,:,:) = aDb1_avg;

t = (1:1:length(aDb1(1,:)))/20;

% x_pos=[0.1,4,7,11]; %task strat time in minutes
% % txt = ["25%", "50%","150%","BSL"];
% txt = ["80 mmHg", "160mmHg","BSL"];
% for i=1:size(x_pos,2)
% if mod(i,2)==0
%     rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,max(aDb1(1,:))],'FaceColor',[0.8 0.8 0.8],'EdgeColor','none',...
%         'LineWidth',3)
%     text(t(x_pos(i)*1200)*1.05,0.9*max(aDb1(1,:)),txt(i));
% else
%     rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,max(aDb1(1,:))],'FaceColor',[0.7 0.7 0.7],'EdgeColor','none',...
%         'LineWidth',3)
%     text(t(x_pos(i)*1200)*1.05,0.9*max(aDb1(1,:)),txt(i));
% 
% end
% end
x_pos=[5,8]; %task strat time in minutes
% txt = ["25%", "50%","150%","BSL"];
txt = ["80 mmHg", "160mmHg"];
for i=1:size(x_pos,2)
if mod(i,2)==0
    rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,240,max(aDb1(1,:))],'FaceColor',[0.8 0.8 0.8],'EdgeColor','none',...
        'LineWidth',3)
    text(t(x_pos(i)*1200)*1.05,0.9*max(aDb1(1,:)),txt(i));
else
    rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,180,max(aDb1(1,:))],'FaceColor',[0.7 0.7 0.7],'EdgeColor','none',...
        'LineWidth',3)
    text(t(x_pos(i)*1200)*1.05,0.9*max(aDb1(1,:)),txt(i));

end
end

hold on;
plot(t,aDb1','DisplayName','aDb1');
hold on;
title("CBFi w.r.t Tourniquet Pressure Levels");

xlabel("Time(s)");
ylabel("CBFi");
plot(aDb1_avg','DisplayName','aDb1_avg','LineWidth',1.5)
legend("DCS 1cm","DCS 2.5cm","DCS 2.5cm TR"); 



figure();

for i=1:size(aDb1_avg,1)
    adb_avg_smooth(i,:) = smooth(aDb1_avg(i,:),15,'rlowess');
end
hold on;
per_ch_mean(1,:) = 100*(adb_avg_smooth(1,:)./ mean(adb_avg_smooth(1,1:100),2));
per_ch_mean(2,:) = 100*(adb_avg_smooth(2,:)./ mean(adb_avg_smooth(2,1:100),2));
per_ch_mean(3,:) = 100*(adb_avg_smooth(3,:)./ mean(adb_avg_smooth(3,1:100),2));

t = (1:1:length(aDb1(1,:)))/20;

% x_pos=[3,5,7,9]; %task strat time in minutes
% txt = ["25%", "50%","150%","BSL"];
% for i=1:size(x_pos,2)
% if mod(i,2)==0
%     rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,max(per_ch_mean(1,:))],'FaceColor',[0.8 0.8 0.8],'EdgeColor','none',...
%         'LineWidth',3)
%     text(t(x_pos(i)*1200)*1.05,0.95*max(per_ch_mean(1,:)),txt(i));
% else
%     rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,max(per_ch_mean(1,:))],'FaceColor',[0.7 0.7 0.7],'EdgeColor','none',...
%         'LineWidth',3)
%     text(t(x_pos(i)*1200)*1.05,0.95*max(per_ch_mean(1,:)),txt(i));
% 
% end
% end
x_pos=[5,8]; %task strat time in minutes
% txt = ["25%", "50%","150%","BSL"];
txt = ["80 mmHg", "160mmHg"];
for i=1:size(x_pos,2)
if mod(i,2)==0
    rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,240,max(per_ch_mean(1,:))],'FaceColor',[0.8 0.8 0.8],'EdgeColor','none',...
        'LineWidth',3)
    text(t(x_pos(i)*1200)*1.05,0.95*max(per_ch_mean(1,:)),txt(i));
else
    rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,180,max(per_ch_mean(1,:))],'FaceColor',[0.7 0.7 0.7],'EdgeColor','none',...
        'LineWidth',3)
    text(t(x_pos(i)*1200)*1.05,0.95*max(per_ch_mean(1,:)),txt(i));

end
end

plot(per_ch_mean')
title("Percent change in CBFi");

xlabel("Time(s)");
ylabel("CBFi");
legend("DCS 1cm","DCS 2.5cm","DCS 2.5cm TR"); 
%% 
% for i=150:1500:size(g2_5_temp,1)
%     semilogx(Data_tau,g2_5_temp(i,:))
%     title("g2 curves for DCS(hybrid) channel")
%     xlabel("Data Tau")
%     hold on;
% end

% semilogx(Data_tau,g2_2_temp(250,:))
% hold on;
% semilogx(Data_tau,g2_6_temp(250,:))
% semilogx(Data_tau,g2_7_temp(250,:))
% semilogx(Data_tau,g2_8_temp(250,:))
% legend("Chan 5","6","7","8")
% title("g2 curves for DCS(hybrid) channel")
% xlabel("Data Tau")

%% % change in the pulsatility of the signal
%This code has been updated for global analysis for all the subjects
%together. Go to next segment run that and then come back.
close all;
per_ch_g_pul = zeros(6,3,13200);
for b=1:6
    aDb1  = squeeze(adb(b,:,:));
    for i=1:size(aDb1,1)
        s = aDb1(i,:);
        breakpoints = 1:200:length(s);
        y = detrend(s,1,breakpoints);
    %     plot(y);
        
        % Plotting the mean average smoothing curve with the envelope
        x = (1:1:length(y))*0.05;
        [envHigh, envLow] = envelope(y,100,'rms');
        envMean = (envHigh+envLow)/2;
        env_diff = envHigh - envLow;
        figure();
        plot(x,y,x,envLow,x,envHigh,x,envMean);
        mh = max(envHigh);
        ml = max(envLow);
        mx = max(mh,ml);
    %         
        snr_val(i,1) = db2mag(snr(s(1:3600),20));
        snr_val(i,2) = db2mag(snr(s(3601:6000),20));
        snr_val(i,3) = db2mag(snr(s(6001:8400),20));
        snr_val(i,4) = db2mag(snr(s(8401:10800),20));
        snr_val(i,5) = db2mag(snr(s(10801:end),20));
       
        
        xt = [10,40,135,240,265];
        yt = [mx,mx-1,mx-2,mx-1,mx];
    %     text(xt,yt,str,'Color','red','FontSize',14);
    %     text((max(x)/2)-10, mx,s_str, 'FontSize',16)
        
        
        title("Pulsatility envelope");
        xlabel("Time (s)");
        ylabel("DCS 1cm aDb");
        
    %         figure();
        env_diff_smooth = smooth(env_diff,150);
    %         plot(x,env_diff_smooth);
    %         title("Pulse amplitude normalized "+s_str+ " "+file_list(j));
    %         xlabel("Time (s)");
    %         ylabel("Pulse Amplitude");
        % % Change in the pulsatility
        avg_sig = smooth(s,150);
        per_change(i,:) = (100*(env_diff_smooth')./mean(env_diff_smooth(1:3500))) ;
        per_ch_g_pul(b,:,:) = per_change;
    %         plot(x,squeeze(per_change(j,i,:)));
    %         title("Percent change in pulse amplitude with pressure cuff " +s_str);
    %         xlabel("Time (s)");
    %         ylabel("% change in Pulse Amplitude");
    end
    % Plotting the changes in each channel in single plot
    figure();
    t = (1:1:length(aDb1(1,:)))/20;
    
    x_pos=[3,5,7,9]; %task strat time in minutes
    txt = ["25%", "50%","150%","BSL"];
    for i=1:size(x_pos,2)
    if mod(i,2)==0
        rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,max(per_change(1,:))],'FaceColor',[0.8 0.8 0.8],'EdgeColor','none',...
            'LineWidth',3)
        text(t(x_pos(i)*1200)*1.05,0.9*max(per_change(1,:)),txt(i));
    else
        rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,max(per_change(1,:))],'FaceColor',[0.7 0.7 0.7],'EdgeColor','none',...
            'LineWidth',3)
        text(t(x_pos(i)*1200)*1.05,0.9*max(per_change(1,:)),txt(i));
    
    end
    end
    
%     x_pos=[5,8]; %task strat time in minutes
%     % txt = ["25%", "50%","150%","BSL"];
%     txt = ["80 mmHg", "160mmHg"];
%     for i=1:size(x_pos,2)
%     if mod(i,2)==0
%         rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,240,max(per_ch_mean(1,:))],'FaceColor',[0.8 0.8 0.8],'EdgeColor','none',...
%             'LineWidth',3)
%         text(t(x_pos(i)*1200)*1.05,0.95*max(per_ch_mean(1,:)),txt(i));
%     else
%         rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,180,max(per_ch_mean(1,:))],'FaceColor',[0.7 0.7 0.7],'EdgeColor','none',...
%             'LineWidth',3)
%         text(t(x_pos(i)*1200)*1.05,0.95*max(per_ch_mean(1,:)),txt(i));
%     
%     end
%     end
    
    hold on;
    l = length(30:length(per_change)-10);
    x_pc = (1:1:l)/20;
    plot(x_pc,squeeze(per_change(1,30:end-10)),'DisplayName','per_change_dcs_1');
    hold on;
    plot(x_pc,squeeze(per_change(2,30:end-10)),'DisplayName','per_change_dcs_25');
    plot(x_pc,squeeze(per_change(3,30:end-10)),'DisplayName','per_change_dcs_25_TR');
    hold off;
    legend("DCS 1cm","DCS 2.5cm","DCS 2.5cm TR"); 
    title("Percent change in pulse amplitude with pressure cuff");
    xlabel("Time (s)");
    ylabel("% change in Pulse Amplitude");
end
%%
% Mean and STD of the percent change in amplitude.
mean_per_change_ampg = squeeze(mean(per_ch_g_pul,1));
std_per_change_ampg = squeeze(std(per_ch_g_pul,0,1));
ind = [1 3];
color = ['b','r'];
hfig = figure();
fname = "Percent_change_pulse_amplitude_tourniquet";
subplot(2,1,1)

t = (1:1:length(mean_per_change_ampg(1,:)))/20;
x_pos=[3,5,7,9]; %task strat time in minutes
txt = ["25%", "50%","150%","BSL"];
curve1 = mean_per_change_ampg(3,:)+std_per_change_ampg(3,:);
for i=1:size(x_pos,2)
if mod(i,2)==0
    rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,1.1*max(curve1)],'FaceColor',[0.8 0.8 0.8],'EdgeColor','none',...
        'LineWidth',3)
    text(t(x_pos(i)*1200)*1.05,0.65*max(curve1),txt(i));
else
    rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,1.1*max(curve1)],'FaceColor',[0.7 0.7 0.7],'EdgeColor','none',...
        'LineWidth',3)
    text(t(x_pos(i)*1200)*1.05,0.65*max(curve1),txt(i));

end
end
hold on;
for i=1:2
%     subplot(2,1,i)
    d = ind(i);
    y = mean_per_change_ampg(d,:);
    x = (1:numel(y))/20;
    std_dev = std_per_change_ampg(d,:);
    curve1 = y + std_dev;
    curve2 = y - std_dev;
    x2 = [x, fliplr(x)];
    inBetween = [curve1, fliplr(curve2)];
    fill(x2, inBetween,color(i),'FaceAlpha',0.1);
    hold on;
    plot(x, y, 'LineWidth', 2);
    xlabel("Time(s)")
    
end
ylabel("Percent(%)")
legend("1cm-STD","1cm-Mean","2.5cm-STD","2.5cm-Mean");

subplot(2,1,2)
% figure();


x_pos=[3,5,7,9]; %task strat time in minutes
txt = ["25%", "50%","150%","BSL"];
for i=1:size(x_pos,2)
if mod(i,2)==0
    rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,1.1*max(curve1)],'FaceColor',[0.8 0.8 0.8],'EdgeColor','none',...
        'LineWidth',3)
%     text(t(x_pos(i)*1200)*1.05,0.95*max(curve1),txt(i));
else
    rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,1.1*max(curve1)],'FaceColor',[0.7 0.7 0.7],'EdgeColor','none',...
        'LineWidth',3)
%     text(t(x_pos(i)*1200)*1.05,0.95*max(curve1),txt(i));

end
end
hold on;

t = (1:1:length(per_change_g(1,:)));
plot(t, per_change_g(1,:)', 'LineWidth', 1.5);
plot(t, per_change_g(3,:)', 'LineWidth', 1.5);
ylabel("aDb (CBFi)")
xlabel("Time(s)")
title("Percent change in CBFi");
legend("rsd = 1 cm","rsd = 2.5cm")



sgtitle("Percentage Change in Pulse amplitude")
xlabel("Time(s)")

picturewidth = 20; % set this parameter and keep it forever
hw_ratio = 1.15; % feel free to play with this ratio
set(findall(hfig,'-property','FontSize'),'FontSize',17) % adjust fontsize to your document

set(findall(hfig,'-property','Box'),'Box','off') % optional
set(findall(hfig,'-property','Interpreter'),'Interpreter','latex') 
set(findall(hfig,'-property','TickLabelInterpreter'),'TickLabelInterpreter','latex')
set(hfig,'Units','centimeters','Position',[3 3 picturewidth hw_ratio*picturewidth])
pos = get(hfig,'Position');
set(hfig,'PaperPositionMode','Auto','PaperUnits','centimeters','PaperSize',[pos(3), pos(4)])
%print(hfig,fname,'-dpdf','-painters','-fillpage')
print(hfig,fname,'-dpng','-painters')
%% Reading all the data for global analysis
a = [2,4,6,10,12,14];
dcs_a = zeros(5,size(Data,1),size(Data,2),size(Data,3));
dcs_at = zeros(5,size(Data,1),size(Data,2),size(Data,3));
adb = zeros(5,3,13200);
mean_adb = zeros(5,3,660);
for b = 1:length(a)
    file_no = a(b);
    %--------------------------------------------------------------------------
    % 
    filename_d=strcat('C:\Users\Jignesh\OneDrive - The University of Western Ontario\Research\Data\TNQT Pulsatility study\TP_Study\DCS\20220608 - '+string(file_no),'\Data.mat');
    
    load(filename_d)
    % load("C:\Users\Jignesh\OneDrive - The University of Western Ontario\Research\Data\TNQT Pulsatility study\TP_Study\TP\20220614\Data.mat")
    dcs_a(b,:,:,:) = Data;
    dcs = Data;
    
    
    
    filename_nd=strcat('C:\Users\Jignesh\OneDrive - The University of Western Ontario\Research\Data\TNQT Pulsatility study\TP_Study\DCS_T\20220608 - '+string(file_no)+'TR','\Data.mat');
    load(filename_nd)
    % load("C:\Users\Jignesh\OneDrive - The University of Western Ontario\Research\Data\TNQT Pulsatility study\TP_Study\TP\20220614 -TR\Data.mat")
    dcs_at(b,:,:,:) = Data;
    dcs_t = Data;
    
    % dcs_nt = dcs_n(128:end,:,:);
    % dcs_t = dcs(121:121+size(dcs_nt,1)-1,:,:);
    Data_all = [dcs  dcs_t];

    g2(1,:,:)=squeeze(dcs(:,1,:)-1); %g2-1 curve generation
    g2_1_temp=squeeze(dcs(:,1,:)-1); %g2-1 curve generation
    g2_2_temp=squeeze(dcs(:,2,:)-1); %g2-1 curve generation
    g2_3_temp=squeeze(dcs(:,3,:)-1); %g2-1 curve generation
    g2_4_temp=squeeze(dcs(:,4,:)-1); %g2-1 curve generation
    g2_5_temp=squeeze(dcs_t(:,1,:)-1);
    g2_6_temp=squeeze(dcs_t(:,2,:)-1);
    g2_7_temp=squeeze(dcs_t(:,3,:)-1);
    g2_8_temp=squeeze(dcs_t(:,4,:)-1);
    % average g2 curve for large source detector separation
    % for i=1:size(g2,2)
    %     g2(2,i,:)=(g2_2_temp(i,:)+g2_3_temp(i,:)+g2_4_temp(i,:)+g2_5_temp(i,:)+g2_6_temp(i,:)+g2_7_temp(i,:)+g2_8_temp(i,:))/8;
    % end
    for i=1:size(g2,2)
        g2(2,i,:)=( g2_2_temp(i,:)+g2_3_temp(i,:)+g2_4_temp(i,:))/3;
    end
    
    for i=1:size(g2,2)
        g2(3,i,:)=( g2_5_temp(i,:)+g2_6_temp(i,:)+g2_7_temp(i,:) + g2_8_temp(i,:))/4;
    end
    
    % for i=1:size(g2,2)
    %     g2a(1,i,:)=( normalize(g2_2_temp(i,:))+normalize(g2_3_temp(i,:))+normalize(g2_4_temp(i,:))+ normalize(0.25*g2_5_temp(i,:))+ 0.25*normalize(g2_6_temp(i,:)) ...
    %         + 0.25*normalize(g2_7_temp(i,:)) + 0.25*normalize(g2_8_temp(i,:)))/4;
    % end
    for i=1:size(g2,2)
        g2a(1,i,:)=( (g2_2_temp(i,:)./g2_2_temp(1,1))+(g2_3_temp(i,:)./g2_3_temp(1,1))+(g2_4_temp(i,:)./g2_4_temp(1,1))+ (g2_5_temp(i,:)./g2_5_temp(1,1))+ (g2_6_temp(i,:)./g2_6_temp(1,1)) ...
            + (g2_7_temp(i,:)./g2_7_temp(1,1)) + (g2_8_temp(i,:)./g2_8_temp(1,1)))/7;
    end


    rho = [1 2.5 2.5]; %source detector separations in cm 
    mua = 0.17; %cm^-1 baseline absorption coefficient
    mus = 10; %cm^-1 baseline reduced scattering coefficient
    
    tau_values=Data_tau;
    
    for chan=1:size(g2,1)
         for i=1:size(g2,2) 
            rsd=rho(chan);
            g2_temp(i,:)=squeeze(g2(chan,i,:));
            LB = [0];
            UB = [inf];
            Starting = [1e-9]; %[aDb, Beta; cm^2/s, a.u.]
            beta= squeeze(g2(chan,i,1)); %0.1568;
            options = optimset('Display','final','TolX',1e-30,'MaxIter',2000000, 'MaxFunEvals', 200000);
            [FittedParams] = fminsearchbnd(@Brownian_fitting,Starting,LB,UB,options,tau_values,g2_temp(i,:),mua,mus,rsd,beta);
            aDb1(chan,i) = FittedParams(1);
        end
    end
    adb(b,:,:) = aDb1;

    close all;
    t_res=0.05; % seconds
    t_avg=1; % window used for averaging in seconds
    
    t_avg_pt=t_avg/t_res; % window used for averaging in points
    time=t_res*(1:1:size(aDb1,2));
    Data_time(1,i)=i*t_res;
    j=1;
    for i=2:t_avg_pt:size(aDb1,2)
        aDb1_avg(1,j)=mean(aDb1(1,i-1:i+t_avg_pt-2));
        aDb1_avg(2,j)=mean(aDb1(2,i-1:i+t_avg_pt-2));
        aDb1_avg(3,j)=mean(aDb1(3,i-1:i+t_avg_pt-2));
    %     time_avg(1,j)=(Data_time(1,i+t_avg_pt-1));
        j=j+1;
    end
    
    mean_adb(b,:,:) = aDb1_avg;


end
%%
close all;
for i=1:6
    figure();
    plot(squeeze(adb(i,1,:)));
    title("subject "+i)
end
%% Global average over all the participants
close all;

mean_adb_cut = mean_adb([1,2,3,5,6],:,:);
adb_g_avg = squeeze(mean(mean_adb_cut,1));
adb_g_std = squeeze(std(mean_adb_cut,0,1));
str = ["r_sd = 1cm","r_sd = 2.5cm","r_sd = 2.5cm-TR"];

per_change_g(1,:) = 100*(adb_g_avg(1,:)./mean(adb_g_avg(1,1:180)));
per_change_g(2,:) = 100*(adb_g_avg(2,:)./mean(adb_g_avg(2,1:180)));
per_change_g(3,:) = 100*(adb_g_avg(3,:)./mean(adb_g_avg(3,1:180)));

per_std_g(1,:) = 100*(adb_g_std(1,:)./mean(adb_g_std(1,1:180)));
per_std_g(2,:) = 100*(adb_g_std(2,:)./mean(adb_g_std(2,1:180)));
per_std_g(3,:) = 100*(adb_g_std(3,:)./mean(adb_g_std(3,1:180)));

figure();
t = (1:1:length(aDb1(1,:)))/20;

x_pos=[3,5,7,9]; %task strat time in minutes
txt = ["25%", "50%","150%","BSL"];
for i=1:size(x_pos,2)
if mod(i,2)==0
    rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,max(per_change_g(1,:))],'FaceColor',[0.8 0.8 0.8],'EdgeColor','none',...
        'LineWidth',3)
    text(t(x_pos(i)*1200)*1.05,0.9*max(per_change_g(1,:)),txt(i));
else
    rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,max(per_change_g(1,:))],'FaceColor',[0.7 0.7 0.7],'EdgeColor','none',...
        'LineWidth',3)
    text(t(x_pos(i)*1200)*1.05,0.9*max(per_change_g(1,:)),txt(i));

end
end
hold on;
plot(per_change_g','DisplayName','per_change_g');
title("% Change in CBFi across all participant")
xlabel("Time(s)")
ylabel("% Change")
legend("r_sd = 1cm","r_sd = 2.5cm","r_sd = 2.5cm-TR")

figure();
for j=1:size(adb_g_avg,1)
    subplot(3,1,j);

    y = adb_g_avg(j,:);
    x = 1:numel(y);
    std_dev = adb_g_std(j,:);
    curve1 = y + std_dev;
    curve2 = y - std_dev;
    x2 = [x, fliplr(x)];
    inBetween = [curve1, fliplr(curve2)];


    t = (1:1:length(aDb1(1,:)))/20;

    x_pos=[3,5,7,9]; %task strat time in minutes
    txt = ["25%", "50%","150%","BSL"];
    for i=1:size(x_pos,2)
    if mod(i,2)==0
        rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,1.1*max(curve1)],'FaceColor',[0.8 0.8 0.8],'EdgeColor','none',...
            'LineWidth',3)
        text(t(x_pos(i)*1200)*1.05,0.95*max(curve1),txt(i));
    else
        rectangle('Position',[t(x_pos(i)*1200),0.1*10^-9,120,1.1*max(curve1)],'FaceColor',[0.7 0.7 0.7],'EdgeColor','none',...
            'LineWidth',3)
        text(t(x_pos(i)*1200)*1.05,0.95*max(curve1),txt(i));
    
    end
    end
    hold on;
    
    fill(x2, inBetween,'k','FaceAlpha',0.2);
    hold on;
    plot(x, y, 'LineWidth', 2);
    ylabel("aDb (CBFi)")
    xlabel("Time(s)")
    title("Mean CBFi across all subjects @"+str(j))
    legend("STD","Mean")
end


%% Pulsatility analysis and g2 averaging of the signal

l = 60; % length of signal as ROI in seconds
s = 1; % Signal ROI starting point in seconds;

ecg_a = data(datastart(1):dataend(1));
bp_a = data(datastart(2):dataend(2));
% tcd_a = data(datastart(3):dataend(3));

ecg1 = ecg_a(1:660000);
ecg1 = normalize(ecg1);
ecg1 = lpf(ecg1,5,1000);
    
% tcd = tcd_a(1:length(ecg1));
% % tcd = normalize(tcd);
% tcd = lpf_ffilts(tcd,30,1000);

bp_a = bp_a(1:length(ecg1));
bp_a = lpf(bp_a,3,1000);

%% Finding the shift

close all;
ecg_ad = circshift(ecg1,-400);
x_e = (1:1:length(ecg_ad))/1000;
plot(x_e,normalize(ecg_ad),'b');
hold on;
x_d = (1:1:size(aDb1,2))/20;
plot(x_d,normalize(aDb1(1,:)),'r');
%% Averaging thr g2 curve
% close all;
% shift = 1:45:800;
% SNR = zeros(1,length(shift));
% bp_shift = circshift(bp_a,0);
% ecg_ad = circshift(ecg1,0); % Advancing the ECG signal to match the DCS signal
%% Finding the R-R peaks of ECG signal

if exist("g2")
    clear g2;
end
mua = 0.17; %cm^-1 baseline absorption coefficient
mus = 10; 

% g2 = Data;
% g2_avg = zeros(size(g2))*NaN;

% Defining the protocol ltime line


% ecg_1 = ecg_ad(1:300000);   % 5 min baseline data
% Data_1 = Data(1:6000,:,:);
% bp_1 = bp_shift(1:300000);
% ecg_2 = ecg_ad(300001:480000); % 3 min TNQT @80 mmHg
% Data_2 = Data(6001:9600,:,:);
% bp_2 = bp_shift(300001:480000);
% ecg_3 = ecg_ad(480001:720000); % 4 min TNQT @160 mmHg
% Data_3 = Data(9601:14400,:,:);
% bp_3 = bp_shift(480001:720000);
% ecg_4 = ecg_ad(720001:780000); % 1 min baseline
% Data_4 = Data(14401:15600,:,:);
% bp_4 = bp_shift(720001:780000);
% 
% g2 = Data;
% ecg = ecg1;
g2_n = Data_all;
strt_time =  [1,181,301,421,541];   %time in seconds
stp_time =  [180,300,420,540,660];    %time in seconds
for i=1:length(strt_time)
    stop_time = stp_time(i);
    start_time = strt_time(i);
    g2 = Data_all(start_time*20:stop_time*20,:,:);
    ecg = ecg_ad(start_time*1000:stop_time*1000);
    % g2(:,1,:)=squeeze(D(:,1,:)-1); %g2-1 curve generation
    % g2_2_temp=squeeze(D(:,2,:)-1); %g2-1 curve generation
    % g2_3_temp=squeeze(D(:,3,:)-1); %g2-1 curve generation
    % g2_4_temp=squeeze(D(:,4,:)-1); %g2-1 curve generation
    
    % average g2 curve for large source detector separation
    % for i=1:size(g2,1)
    %     g2(i,2,:)=(g2_2_temp(i,:)+g2_3_temp(i,:)+g2_4_temp(i,:))/3;
    % end
    
    [h_pks,l_pks] = findpeaks(normalize(ecg),"MinPeakHeight",2.5);
    
    fig1=figure('units','centimeters', 'Position',[2 2 35 13]); %18 width 15 heigh
    hold on
    plot(normalize(ecg),'r')
    plot(l_pks, h_pks,'*k')
    hd_pks = floor(h_pks./50);
    ld_pks = floor(l_pks./50);
    % g2_avg = zeros(size(g2,1),size(g2,2),size(g2,3));
    avg_window_width = 40;
    for i=1:size(ld_pks,2)-1
        if size(ld_pks,2)-i < avg_window_width
            avg_window_width = avg_window_width-1
        end
        min_length = min(diff(ld_pks(i:i+avg_window_width)));
        base_sig = g2(ld_pks(i):ld_pks(i)+min_length,:,:);
       
        for j=1:avg_window_width-1
            base_sig = base_sig + g2(ld_pks(i+j):ld_pks(i+j)+min_length,:,:);
    %         adb_1 = hybrid_dcs(base_sig,Data_tau);
           
        end
        g2(ld_pks(i):ld_pks(i)+min_length,:,:) = base_sig./avg_window_width;
    end

    g2_n(start_time*20:stop_time*20,:,:) = g2;
end

% for i=1:size(g2,1)
%     g2(i,2,:)=(g2_2_temp(i,:)+g2_3_temp(i,:)+g2_4_temp(i,:))/3;
% end



adb_avg = standalone_tr_dcs(g2_n,Data_tau);
% SNR(1,k) = snr(adb_avg(2,:),20);
figure
snr(adb_avg(2,:),20)

% adb_avg = adb_avg; % This is cut out specific portion of the signal to plot
% figure();
adb = standalone_tr_dcs(Data_all,Data_tau);
dcs_1lp = lpf(adb_avg(1,:),7,20);
dcs_25lp = lpf(adb_avg(2,:),7,20);
dcs_25lp_tr = lpf(adb_avg(3,:),7,20);

% aDb1 = aDb1;
% figure();
% snr(adb_avg(2,:),20);
figure();
plot(adb_avg(2,:),'b',"LineWidth",1.5);
hold on; 
plot(adb(2,:),'r');
legend("Ensemle Temporal Averaged","Raw")
% title("Comparision of g2 averaging for cuff data MPCM004 width=50 cycles")
% legend("g2 Averaged signal","Raw signal")
% xlabel("samples (Time = samples/20)");
% ylabel("aDb")

%% Plotting the ensemble avg of the DCS signal
%send the  mode as wether the averae to be with NaN(1) or without the
%NaN(0)
close all;
strt_time =  [10,190,310,430];   %time in seconds
stp_time =  [160,290,410,530];    %time in seconds
j =3;
ens_avg_sig = ensemble_avg(ecg1(strt_time(j)*1000:stp_time(j)*1000),dcs_25lp(1,strt_time(j)*20:stp_time(j)*20),400,1);

PI = (min(d))


%%
figure();
plot((1:1:size(adb_avg,2))/20, adb_avg(2,:),'b',"LineWidth",1.5);
title("Temporal Averaging Comparision");
xlabel("Time(s)")
ylabel("CBFi")
hold on; 
plot((1:1:size(adb_avg,2))/20,adb(2,:),'r');
legend("Ensemle Temporal Averaged","Raw")
%% Plotting the frequency spectrum of the averaged and raw signal
Fs = 20;            % Sampling frequency                    
T = 1/Fs;             % Sampling period    
% signal = adb_avg(2,:);
signal = aDb1(2,8000:11000);
L = length(signal);     
% Length of signal
t = (0:L-1)*T;  

Y = fft(signal);
P2 = abs(Y/L);
P1 = P2(1:L/2+1);
P1(2:end-1) = 2*P1(2:end-1);
figure();
f = Fs*(0:(L/2))/L;
plot(f,P1) 
title('FFT of raw DCS 2.5cm')
xlabel('f (Hz)')
ylabel('|P1(f)|')


%% Compare the 2.5cm and 1.5cm signals

t = (1:1:length(adb_avg(2,:)))/20;
plot(t,normalize(adb_avg(1,:)),'b'); hold on; plot(t,normalize(adb_avg(2,:)));
title("Comparison Between 1.5cm and 2.5cm DCS signal @TNQT 150%")
ylabel("Normalized Unit");
xlabel("Time(s)");
legend("r_s_d = 1.5cm","r_s_d = 2.5cm");

%% Compare the 2.5cm and 1.5cm signals after filtering

dcs_1lp = lpf(adb_avg(1,:),7,20);
dcs_3lp = lpf(adb_avg(2,:),7,20);

t = (1:1:length(dcs_1lp))/20;
plot(t,normalize(dcs_1lp),'b'); hold on; plot(t,normalize(dcs_3lp));
title("Comparison: Filtered & g2 avg 1.5cm & 2.5cm DCS signal @TNQT 150%")
ylabel("Normalized Unit");
xlabel("Time(s)");
legend("r_s_d = 1.5cm","r_s_d = 2.5cm");

%% Compare the 2.5cm signal with and without g2 averaging
close all
t = (1:1:length(adb_avg(1,:)))/20;
plot(t,normalize(adb_avg(2,:)),'b'); hold on; plot(t,normalize(adb(2,:)));
title("Comparing 2.5cm signal with and without g2 averaging @TNQT 150%")
ylabel("Normalized Unit");
xlabel("Time(s)");
legend("g2 averaged","original");


%%
figure();
subplot(1,3,1);
semilogx(Data_tau,squeeze(Data(1,2,:)));
xlabel("Data Tau(s)")
title("Autocorrelation Curve");
subplot(1,3,2);
semilogx(Data_tau,squeeze(Data(20,2,:)));
xlabel("Data Tau(s)")
title("Autocorrelation Curve");
subplot(1,3,3);
semilogx(Data_tau,squeeze(Data(40,2,:)));
xlabel("Data Tau(s)")
title("Autocorrelation Curve");


%% Statistical analysis
an_table = zeros(2,5,3);
for i= 1:5
    an_table(:,i,1) = mean(squeeze(per_ch_g_pul(i,[1,3],3700:5500)),2);
    an_table(:,i,2) = mean(squeeze(per_ch_g_pul(i,[1,3],6100:7500)),2);
    an_table(:,i,3) = mean(squeeze(per_ch_g_pul(i,[1,3],8500:10000)),2);
end

csvwrite("anova_matrix_1cm.csv",squeeze(an_table(1,:,:)));
csvwrite("anova_matrix_25mm.csv",squeeze(an_table(2,:,:)));
